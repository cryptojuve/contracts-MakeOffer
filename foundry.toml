[profile.default]
solc-version = "0.8.20"
#auto_detect_solc = false
cache = true
evm_version = 'london'
force = false
via_ir = true
gas_reports = [
  "DropERC721Benchmark",
  "DropERC20Benchmark",
  "DropERC1155Benchmark",
  "TokenERC20Benchmark",
  "TokenERC721Benchmark",
  "TokenERC1155Benchmark",
  "MultiwrapBenchmark",
  "SignatureDropBenchmark",
  "AirdropERC20Benchmark",
  "AirdropERC721Benchmark",
  "AirdropERC1155Benchmark",
  "NFTStakeBenchmark",
  "EditionStakeBenchmark",
  "TokenStakeBenchmark",
  "PackBenchmark",
  "PackVRFDirectBenchmark",
  "AccountBenchmark",
]
libraries = []
libs = ['lib']
optimizer = true
optimizer_runs = 2000
out = 'artifacts_forge'
fs_permissions = [{ access = "read-write", path = "./src/test/smart-wallet/utils"}]
src = 'contracts'
test = 'src/test'
verbosity = 0
#ignored_error_codes = []
#fuzz_runs = 100
ffi = true

# Configuration pour HyperEVM et r√©seaux de test
[rpc_endpoints]
hyperevm = "${HYPEREVM_RPC_URL}"
hyperevm-testnet = "${HYPEREVM_TESTNET_RPC_URL}"
base-mainnet = "${BASE_MAINNET_RPC_URL}"
base-sepolia = "${BASE_SEPOLIA_RPC_URL}"

[etherscan]
hyperevm = { key = "${ETHERSCAN_API_KEY}" }
hyperevm-testnet = { key = "${ETHERSCAN_API_KEY}" }
base-mainnet = { key = "${ETHERSCAN_API_KEY}" }
base-sepolia = { key = "${ETHERSCAN_API_KEY}" }

# Configuration pour les tests sur HyperEVM
[profile.hyperevm-test]
chain_id = 1337
gas_limit = 9223372036854775807
gas_price = 0
block_base_fee_per_gas = 0
block_coinbase = '0x00a329c0648769a73afac7f9381e08fb43dbea72'
tx_origin = '0x00a329c0648769a73afac7f9381e08fb43dbea72'
initial_balance = '0xffffffffffffffffffffffff'
via_ir = true
